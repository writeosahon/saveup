{"version":3,"sources":["controller.js"],"names":[],"mappings":"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","file":"controller-compiled.js","sourcesContent":["/**\r\n * Created by UTOPIA SOFTWARE on 20/03/2017.\r\n */\r\n\r\n/**\r\n * file defines all View-Models, Controllers and Event Listeners used by the app\r\n *\r\n * The 'utopiasoftware.saveup' namespace has being defined in the base js file.\r\n * The author uses the terms 'method' and function interchangeably; likewise the terms 'attribute' and 'property' are\r\n * also used interchangeably\r\n */\r\n\r\n\r\n// define the controller namespace\r\nutopiasoftware.saveup.controller = {\r\n\r\n    /**\r\n     * method is used to handle the special event created by the intel xdk developer library. The special event (app.Ready)\r\n     * is triggered when ALL the hybrid app pluigins have been loaded/readied and also the document DOM content is ready\r\n     */\r\n    appReady: () => {\r\n\r\n        // initialise the onsen library\r\n        ons.ready(function () {\r\n            // set the default handler for the app\r\n            ons.setDefaultDeviceBackButtonListener(function(){\r\n                console.log(\"DEFAULT BACK BUTTON LISTENER\");\r\n\r\n            });\r\n\r\n            if(utopiasoftware.saveup.model.isAppReady === false){ // if app has not completed loading\r\n                // displaying prepping message\r\n                $('#loader-modal-message').html(\"Preparing App...\");\r\n                $('#loader-modal').get(0).show(); // show loader\r\n            }\r\n\r\n            // check if the user has previously logged in to the app\r\n            if (!window.localStorage.getItem(\"app-status\") || window.localStorage.getItem(\"app-status\") == \"\") { // user has not logged in\r\n                //set the first page to be displayed to be the login page\r\n                $('ons-splitter').get(0).content.load(\"login-template\");\r\n            }\r\n            else { // user is already logged in\r\n                // load the main tabbar for the app\r\n                $('ons-splitter').get(0).content.load(\"laundry-mart-tabbar-template\");\r\n\r\n                // enable the swipeable feature for the app splitter\r\n                $('ons-splitter-side').attr(\"swipeable\", true);\r\n            }\r\n\r\n        });\r\n\r\n        // add listener for when the Internet network connection is offline\r\n        document.addEventListener(\"offline\", function(){\r\n\r\n            // display a toast message to let user no there is no Internet connection\r\n            window.plugins.toast.showWithOptions({\r\n                message: \"No Internet Connection. App functionality may be limited\",\r\n                duration: 4000, // 2000 ms\r\n                position: \"bottom\",\r\n                styling: {\r\n                    opacity: 1,\r\n                    backgroundColor: '#000000',\r\n                    textColor: '#FFFFFF',\r\n                    textSize: 14\r\n                }\r\n            });\r\n\r\n        }, false);\r\n\r\n        try {\r\n            // lock the orientation of the device to 'PORTRAIT'\r\n            screen.lockOrientation('portrait');\r\n        }\r\n        catch(err){}\r\n\r\n        // set status bar color\r\n        StatusBar.backgroundColorByHexString(\"#000000\");\r\n\r\n        // set app ready flag to true\r\n        utopiasoftware.saveup.model.isAppReady = true;\r\n    },\r\n\r\n    /**\r\n     * object is view-model for sign-in page\r\n     */\r\n    signInPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the sign-in page\r\n         */\r\n        formValidator: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // find all onsen-ui input targets and insert a special class to prevent materialize-css from updating the styles\r\n            $('ons-input input', $thisPage).addClass('utopiasoftware-no-style');\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.saveup.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $thisPage.get(0).onDeviceBackButton = function(){\r\n                    ons.notification.confirm('Do you want to close the app?', {title: 'Exit',\r\n                            buttonLabels: ['No', 'Yes']}) // Ask for confirmation\r\n                        .then(function(index) {\r\n                            if (index === 1) { // OK button\r\n                                navigator.app.exitApp(); // Close the app\r\n                            }\r\n                        });\r\n                };\r\n\r\n                // initialise the sign-in form validation\r\n                utopiasoftware.saveup.controller.signInPageViewModel.formValidator = $('#login-form').parsley();\r\n\r\n                // attach listener for the sign in button on the sign-in page\r\n                $('#login-signin').get(0).onclick = function(){\r\n                    // run the validation method for the sign-in form\r\n                    utopiasoftware.saveup.controller.signInPageViewModel.formValidator.whenValidate();\r\n                };\r\n\r\n                // listen for log in form field validation failure event\r\n                utopiasoftware.saveup.controller.signInPageViewModel.formValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    $(fieldInstance.$element).addClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).attr(\"data-hint\", fieldInstance.getErrorsMessages()[0]);\r\n                });\r\n\r\n                // listen for log in form field validation success event\r\n                utopiasoftware.saveup.controller.signInPageViewModel.formValidator.on('field:success', function(fieldInstance) {\r\n                    // remove tooltip from element\r\n                    $(fieldInstance.$element).removeClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).removeAttr(\"data-hint\");\r\n                });\r\n\r\n                // listen for log in form validation success\r\n                utopiasoftware.saveup.controller.signInPageViewModel.formValidator.on('form:success',\r\n                    utopiasoftware.saveup.controller.signInPageViewModel.signinFormValidated);\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n                // now that the page is being shown without the loader, start the animation of the icons\r\n                $('ons-icon.first,ons-icon.second', $thisPage).addClass('animated swing');\r\n                // wait for 4 seconds, then stop the pulse animation of the Create Account button\r\n                setTimeout(function(){$('#login-create-account', $thisPage).removeClass('pulse');}, 4000);\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the sign-in page is hidden\r\n         * @param event\r\n         */\r\n        pageHide: (event) => {\r\n            try {\r\n                // remove any tooltip being displayed on all forms in the login page\r\n                $('#sign-in-page [data-hint]').removeClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                $('#sign-in-page [data-hint]').removeAttr(\"data-hint\");\r\n                // reset the form validator object in the sign-in page\r\n                utopiasoftware.saveup.controller.signInPageViewModel.formValidator.reset();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the sign-in page is destroyed\r\n         * @param event\r\n         */\r\n        pageDestroy: (event) => {\r\n            try{\r\n                // remove any tooltip being displayed on all forms in the login page\r\n                $('#sign-in-page [data-hint]').removeClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                $('#sign-in-page [data-hint]').removeAttr(\"data-hint\");\r\n                // destroy the form validator objects in the login page\r\n                utopiasoftware.saveup.controller.signInPageViewModel.formValidator.destroy();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when sign-in form is successfully validated\r\n         */\r\n        signinFormValidated: function(){},\r\n\r\n        /**\r\n         * method is triggered when create account button is clicked\r\n         */\r\n        createAccountButtonClicked: function(){\r\n            // move the tab view to the Sign Up tab\r\n            $('#login-tabbar').get(0).setActiveTab(1, {animation: \"slide\"});\r\n        },\r\n\r\n        /**\r\n         * method is triggered when forgot pin button is clicked\r\n         */\r\n        forgotPinButtonClicked: function(){\r\n            // move the tab view to the Reset PIN tab\r\n            $('#login-tabbar').get(0).setActiveTab(2, {animation: \"slide\"});\r\n        }\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * object is view-model for create-account page\r\n     */\r\n    createAccountPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the create-account page\r\n         */\r\n        formValidator: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // find all onsen-ui input targets and insert a special class to prevent materialize-css from updating the styles\r\n            $('ons-input input', $thisPage).addClass('utopiasoftware-no-style');\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.saveup.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $thisPage.get(0).onDeviceBackButton = function(){\r\n                    // move to the first tab in the tab bar i.e sign-in page\r\n                    $('#login-tabbar').get(0).setActiveTab(0, {animation: \"slide\"});\r\n                };\r\n\r\n                // initialise the create-account form validation\r\n                utopiasoftware.saveup.controller.createAccountPageViewModel.formValidator = $('#create-account-form').parsley();\r\n\r\n                // attach listener for the create account button on the create account page\r\n                $('#create-account-button').get(0).onclick = function(){\r\n                    // run the validation method for the create account form\r\n                    utopiasoftware.saveup.controller.createAccountPageViewModel.formValidator.whenValidate();\r\n                };\r\n\r\n                // listen for log in form field validation failure event\r\n                utopiasoftware.saveup.controller.createAccountPageViewModel.formValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    $(fieldInstance.$element).parent().find('label:eq(0)').addClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).parent().find('label:eq(0)').attr(\"data-hint\", fieldInstance.getErrorsMessages()[0]);\r\n                });\r\n\r\n                // listen for log in form field validation success event\r\n                utopiasoftware.saveup.controller.createAccountPageViewModel.formValidator.on('field:success', function(fieldInstance) {\r\n                    // remove tooltip from element\r\n                    $(fieldInstance.$element).parent().find('label:eq(0)').removeClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).parent().find('label:eq(0)').removeAttr(\"data-hint\");\r\n                });\r\n\r\n                // listen for log in form validation success\r\n                utopiasoftware.saveup.controller.createAccountPageViewModel.formValidator.on('form:success',\r\n                    utopiasoftware.saveup.controller.createAccountPageViewModel.createAccountFormValidated);\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the create-account page is hidden\r\n         * @param event\r\n         */\r\n        pageHide: (event) => {\r\n            try {\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#create-account-page [data-hint]').removeClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                $('#create-account-page [data-hint]').removeAttr(\"data-hint\");\r\n                // reset the form validator object on the page\r\n                utopiasoftware.saveup.controller.createAccountPageViewModel.formValidator.reset();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the sign-in page is destroyed\r\n         * @param event\r\n         */\r\n        pageDestroy: (event) => {\r\n            try{\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#create-account-page [data-hint]').removeClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                $('#create-account-page [data-hint]').removeAttr(\"data-hint\");\r\n                // destroy the form validator objects on the page\r\n                utopiasoftware.saveup.controller.createAccountPageViewModel.formValidator.destroy();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when sign-in form is successfully validated\r\n         */\r\n        createAccountFormValidated: function(){\r\n\r\n            // tell the user that phoe number verification is necessary\r\n            new Promise(function(resolve, reject){\r\n                ons.notification.confirm('To complete account creation, your phone number must be verified. <br>' +\r\n                    'Usual SMS charge from your phone network provider will apply', {title: 'Verify Phone Number',\r\n                        buttonLabels: ['Cancel', 'Ok']}) // Ask for confirmation\r\n                    .then(function(index) {\r\n                        if (index === 1) { // OK button\r\n                            resolve();\r\n                        }\r\n                        else{\r\n                            reject(\"your phone number could not be verified\");\r\n                        }\r\n                    });\r\n            }).\r\n            then(function(){\r\n                return null;\r\n               //return utopiasoftware.saveup.validatePhoneNumber($('#create-phone').val());\r\n            }).\r\n            then(function(){\r\n                $('ons-splitter').get(0).content.load(\"onboarding-template\");\r\n            }).\r\n            catch(function(err){\r\n                ons.notification.alert({title: \"Account Creation Failed\",\r\n                    messageHTML: '<ons-icon icon=\"md-close-circle-o\" size=\"30px\" ' +\r\n                    'style=\"color: red;\"></ons-icon> <span>' + err + '</span>',\r\n                    cancelable: false\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the Create Account PIN visibility button is clicked.\r\n         * It toggles pin visibility\r\n         *\r\n         * @param buttonElement\r\n         */\r\n        pinVisibilityButtonClicked: function(buttonElement){\r\n            if($(buttonElement).attr(\"data-saveup-visible\") === \"no\"){ // pin is not visible, make it visible\r\n                $('#create-secure-pin').css(\"-webkit-text-security\", \"none\"); // change the text-security for the input field\r\n                $(buttonElement).find('ons-icon').attr(\"icon\", \"md-eye-off\"); // change the icon associated with the input\r\n                $(buttonElement).attr(\"data-saveup-visible\", \"yes\"); // flag the pin is now visible\r\n            }\r\n            else{ // make the pin not visible\r\n                $('#create-secure-pin').css(\"-webkit-text-security\", \"disc\"); // change the text-security for the input field\r\n                $(buttonElement).find('ons-icon').attr(\"icon\", \"md-eye\"); // change the icon associated with the input\r\n                $(buttonElement).attr(\"data-saveup-visible\", \"no\"); // flag the pin is now invisible\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * object is view-model for reset-pin page\r\n     */\r\n    resetPinPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the sign-in page\r\n         */\r\n        formValidator: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // find all onsen-ui input targets and insert a special class to prevent materialize-css from updating the styles\r\n            $('ons-input input', $thisPage).addClass('utopiasoftware-no-style');\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.saveup.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $thisPage.get(0).onDeviceBackButton = function(){\r\n                    // move to the first tab in the tab bar i.e sign-in page\r\n                    $('#login-tabbar').get(0).setActiveTab(0, {animation: \"slide\"});\r\n                };\r\n\r\n                // initialise the reset-pin form validation\r\n                utopiasoftware.saveup.controller.resetPinPageViewModel.formValidator = $('#reset-pin-form').parsley();\r\n\r\n                // attach listener for the reset button on the reset-pin page\r\n                $('#reset-pin-reset').get(0).onclick = function(){\r\n                    // run the validation method for the sign-in form\r\n                    utopiasoftware.saveup.controller.resetPinPageViewModel.formValidator.whenValidate();\r\n                };\r\n\r\n                // listen for log in form field validation failure event\r\n                utopiasoftware.saveup.controller.resetPinPageViewModel.formValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    $(fieldInstance.$element).addClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).attr(\"data-hint\", fieldInstance.getErrorsMessages()[0]);\r\n                });\r\n\r\n                // listen for log in form field validation success event\r\n                utopiasoftware.saveup.controller.resetPinPageViewModel.formValidator.on('field:success', function(fieldInstance) {\r\n                    // remove tooltip from element\r\n                    $(fieldInstance.$element).removeClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).removeAttr(\"data-hint\");\r\n                });\r\n\r\n                // listen for log in form validation success\r\n                utopiasoftware.saveup.controller.resetPinPageViewModel.formValidator.on('form:success',\r\n                    utopiasoftware.saveup.controller.resetPinPageViewModel.resetPinFormValidated);\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the page is hidden\r\n         * @param event\r\n         */\r\n        pageHide: (event) => {\r\n            try {\r\n                // remove any tooltip being displayed on all forms in the page\r\n                $('#reset-pin-page [data-hint]').removeClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                $('#reset-pin-page [data-hint]').removeAttr(\"data-hint\");\r\n                // reset the form validator object in the page\r\n                utopiasoftware.saveup.controller.resetPinPageViewModel.formValidator.reset();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the page is destroyed\r\n         * @param event\r\n         */\r\n        pageDestroy: (event) => {\r\n            try{\r\n                // remove any tooltip being displayed on all forms in the page\r\n                $('#reset-pin-page [data-hint]').removeClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                $('#reset-pin-page [data-hint]').removeAttr(\"data-hint\");\r\n                // destroy the form validator objects in the page\r\n                utopiasoftware.saveup.controller.resetPinPageViewModel.formValidator.destroy();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when reset-pin form is successfully validated\r\n         */\r\n        resetPinFormValidated: function(){},\r\n\r\n        /**\r\n         * method is triggered when back to Sign In button is clicked\r\n         */\r\n        signInButtonClicked: function(){\r\n            // move the tab view to the Sign In tab\r\n            $('#login-tabbar').get(0).setActiveTab(0, {animation: \"slide\"});\r\n        }\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * object is view-model for onboarding page\r\n     */\r\n    onboardingPageViewModel: {\r\n\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.saveup.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#onboarding-navigator').get(0).topPage.onDeviceBackButton = function(){\r\n                    ons.notification.confirm('Do you want to close the app?', {title: 'Exit',\r\n                        buttonLabels: ['No', 'Yes']}) // Ask for confirmation\r\n                        .then(function(index) {\r\n                            if (index === 1) { // OK button\r\n                                navigator.app.exitApp(); // Close the app\r\n                            }\r\n                        });\r\n                };\r\n\r\n                // initialise carousel\r\n                $('#onboarding-carousel', $thisPage).carousel({dist: 0, fullWidth: true, indicators: true, noWrap: true});\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n            }\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is used to move the onboarding presentation to the next slide\r\n         *\r\n         * @param buttonElem\r\n         */\r\n        nextSlideButtonClicked: function(buttonElem){\r\n            $('#onboarding-carousel').carousel('next'); // move to the next slide\r\n            // wait for the slide animation to complete\r\n            setTimeout(function(){\r\n                // check if this is the last slide in the presentation\r\n                if($('.carousel-item.active').is('[href=\"#three!\"]')){ // this is the last slide\r\n                    $(buttonElem).css(\"display\", \"none\"); // hide the Next button\r\n                }\r\n            }, 205);\r\n        },\r\n\r\n\r\n        /**\r\n         * method is used to end the onboarding presentation\r\n         */\r\n        endButtonClicked: function(){\r\n\r\n            // load the main menu template\r\n            $('ons-splitter').get(0).content.load(\"app-main-template\");\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * object is view-model for main-menu page\r\n     */\r\n    mainMenuPageViewModel: {\r\n\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.saveup.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton = function(){\r\n                    ons.notification.confirm('Do you want to close the app?', {title: 'Exit',\r\n                            buttonLabels: ['No', 'Yes']}) // Ask for confirmation\r\n                        .then(function(index) {\r\n                            if (index === 1) { // OK button\r\n                                navigator.app.exitApp(); // Close the app\r\n                            }\r\n                        });\r\n                };\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n            }\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is used to listen for click events of the main menu items\r\n         *\r\n         * @param label\r\n         */\r\n        mainMenuButtonsClicked: function(label){\r\n            if(label == \"join savings group\"){ // 'join saving group' button was clicked\r\n\r\n                $('#app-main-navigator').get(0).pushPage(\"join-savings-groups-page.html\", {}); // navigate to the onboarding presentation\r\n\r\n                return;\r\n            }\r\n\r\n            if(label == \"intro\"){ // intro button was clicked\r\n\r\n                $('ons-splitter').get(0).content.load(\"onboarding-template\"); // navigate to the onboarding presentation\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * object is view-model for join-savings-groups page\r\n     */\r\n    joinSavingsGroupsViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the page\r\n         */\r\n        formValidator: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // find all onsen-ui input targets and insert a special class to prevent materialize-css from updating the styles\r\n            $('ons-input input', $thisPage).addClass('utopiasoftware-no-style');\r\n            // enable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').attr(\"swipeable\", true);\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.saveup.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton = function(){\r\n                    $('#app-main-navigator').get(0).popPage({refresh: false});\r\n                };\r\n\r\n                // initilise the select element\r\n                $('#join-savings-group-choose-group', $thisPage).material_select();\r\n\r\n                // initialise the create-account form validation\r\n                utopiasoftware.saveup.controller.joinSavingsGroupsViewModel.formValidator = $('#create-account-form').parsley();\r\n\r\n                // attach listener for the create account button on the create account page\r\n                $('#create-account-button').get(0).onclick = function(){\r\n                    // run the validation method for the create account form\r\n                    utopiasoftware.saveup.controller.createAccountPageViewModel.formValidator.whenValidate();\r\n                };\r\n\r\n                // listen for log in form field validation failure event\r\n                utopiasoftware.saveup.controller.createAccountPageViewModel.formValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    $(fieldInstance.$element).parent().find('label:eq(0)').addClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).parent().find('label:eq(0)').attr(\"data-hint\", fieldInstance.getErrorsMessages()[0]);\r\n                });\r\n\r\n                // listen for log in form field validation success event\r\n                utopiasoftware.saveup.controller.createAccountPageViewModel.formValidator.on('field:success', function(fieldInstance) {\r\n                    // remove tooltip from element\r\n                    $(fieldInstance.$element).parent().find('label:eq(0)').removeClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).parent().find('label:eq(0)').removeAttr(\"data-hint\");\r\n                });\r\n\r\n                // listen for log in form validation success\r\n                utopiasoftware.saveup.controller.createAccountPageViewModel.formValidator.on('form:success',\r\n                    utopiasoftware.saveup.controller.createAccountPageViewModel.createAccountFormValidated);\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the create-account page is hidden\r\n         * @param event\r\n         */\r\n        pageHide: (event) => {\r\n            try {\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#create-account-page [data-hint]').removeClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                $('#create-account-page [data-hint]').removeAttr(\"data-hint\");\r\n                // reset the form validator object on the page\r\n                utopiasoftware.saveup.controller.createAccountPageViewModel.formValidator.reset();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the sign-in page is destroyed\r\n         * @param event\r\n         */\r\n        pageDestroy: (event) => {\r\n            try{\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#create-account-page [data-hint]').removeClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                $('#create-account-page [data-hint]').removeAttr(\"data-hint\");\r\n                // destroy the form validator objects on the page\r\n                utopiasoftware.saveup.controller.createAccountPageViewModel.formValidator.destroy();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when sign-in form is successfully validated\r\n         */\r\n        createAccountFormValidated: function(){\r\n\r\n            // tell the user that phoe number verification is necessary\r\n            new Promise(function(resolve, reject){\r\n                ons.notification.confirm('To complete account creation, your phone number must be verified. <br>' +\r\n                        'Usual SMS charge from your phone network provider will apply', {title: 'Verify Phone Number',\r\n                        buttonLabels: ['Cancel', 'Ok']}) // Ask for confirmation\r\n                    .then(function(index) {\r\n                        if (index === 1) { // OK button\r\n                            resolve();\r\n                        }\r\n                        else{\r\n                            reject(\"your phone number could not be verified\");\r\n                        }\r\n                    });\r\n            }).\r\n            then(function(){\r\n                return null;\r\n                //return utopiasoftware.saveup.validatePhoneNumber($('#create-phone').val());\r\n            }).\r\n            then(function(){\r\n                $('ons-splitter').get(0).content.load(\"onboarding-template\");\r\n            }).\r\n            catch(function(err){\r\n                ons.notification.alert({title: \"Account Creation Failed\",\r\n                    messageHTML: '<ons-icon icon=\"md-close-circle-o\" size=\"30px\" ' +\r\n                    'style=\"color: red;\"></ons-icon> <span>' + err + '</span>',\r\n                    cancelable: false\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the Create Account PIN visibility button is clicked.\r\n         * It toggles pin visibility\r\n         *\r\n         * @param buttonElement\r\n         */\r\n        pinVisibilityButtonClicked: function(buttonElement){\r\n            if($(buttonElement).attr(\"data-saveup-visible\") === \"no\"){ // pin is not visible, make it visible\r\n                $('#create-secure-pin').css(\"-webkit-text-security\", \"none\"); // change the text-security for the input field\r\n                $(buttonElement).find('ons-icon').attr(\"icon\", \"md-eye-off\"); // change the icon associated with the input\r\n                $(buttonElement).attr(\"data-saveup-visible\", \"yes\"); // flag the pin is now visible\r\n            }\r\n            else{ // make the pin not visible\r\n                $('#create-secure-pin').css(\"-webkit-text-security\", \"disc\"); // change the text-security for the input field\r\n                $(buttonElement).find('ons-icon').attr(\"icon\", \"md-eye\"); // change the icon associated with the input\r\n                $(buttonElement).attr(\"data-saveup-visible\", \"no\"); // flag the pin is now invisible\r\n            }\r\n        }\r\n\r\n    }\r\n};\r\n"]}