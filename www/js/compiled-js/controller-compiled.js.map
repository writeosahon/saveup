{"version":3,"sources":["controller.js"],"names":[],"mappings":"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","file":"controller-compiled.js","sourcesContent":["/**\r\n * Created by UTOPIA SOFTWARE on 20/03/2017.\r\n */\r\n\r\n/**\r\n * file defines all View-Models, Controllers and Event Listeners used by the app\r\n *\r\n * The 'utopiasoftware.saveup' namespace has being defined in the base js file.\r\n * The author uses the terms 'method' and function interchangeably; likewise the terms 'attribute' and 'property' are\r\n * also used interchangeably\r\n */\r\n\r\n\r\n// define the controller namespace\r\nutopiasoftware.saveup.controller = {\r\n\r\n    /**\r\n     * method is used to handle the special event created by the intel xdk developer library. The special event (app.Ready)\r\n     * is triggered when ALL the hybrid app pluigins have been loaded/readied and also the document DOM content is ready\r\n     */\r\n    appReady: () => {\r\n\r\n        // initialise the onsen library\r\n        ons.ready(function () {\r\n            // set the default handler for the app\r\n            ons.setDefaultDeviceBackButtonListener(function(){\r\n                console.log(\"DEFAULT BACK BUTTON LISTENER\");\r\n\r\n            });\r\n\r\n            if(utopiasoftware.saveup.model.isAppReady === false){ // if app has not completed loading\r\n                // displaying prepping message\r\n                $('#loader-modal-message').html(\"Preparing App...\");\r\n                $('#loader-modal').get(0).show(); // show loader\r\n            }\r\n\r\n            // check if the user has previously logged in to the app\r\n            if (!window.localStorage.getItem(\"app-status\") || window.localStorage.getItem(\"app-status\") == \"\") { // user has not logged in\r\n                //set the first page to be displayed to be the login page\r\n                $('ons-splitter').get(0).content.load(\"login-template\");\r\n            }\r\n            else { // user is already logged in\r\n                // load the main tabbar for the app\r\n                $('ons-splitter').get(0).content.load(\"laundry-mart-tabbar-template\");\r\n\r\n                // enable the swipeable feature for the app splitter\r\n                $('ons-splitter-side').attr(\"swipeable\", true);\r\n            }\r\n\r\n        });\r\n\r\n        // add listener for when the Internet network connection is offline\r\n        document.addEventListener(\"offline\", function(){\r\n\r\n            // display a toast message to let user no there is no Internet connection\r\n            window.plugins.toast.showWithOptions({\r\n                message: \"No Internet Connection. App functionality may be limited\",\r\n                duration: 4000, // 2000 ms\r\n                position: \"bottom\",\r\n                styling: {\r\n                    opacity: 1,\r\n                    backgroundColor: '#000000',\r\n                    textColor: '#FFFFFF',\r\n                    textSize: 14\r\n                }\r\n            });\r\n\r\n        }, false);\r\n\r\n        try {\r\n            // lock the orientation of the device to 'PORTRAIT'\r\n            screen.lockOrientation('portrait');\r\n        }\r\n        catch(err){}\r\n\r\n        // set status bar color\r\n        StatusBar.backgroundColorByHexString(\"#000000\");\r\n\r\n        // set app ready flag to true\r\n        utopiasoftware.saveup.model.isAppReady = true;\r\n    },\r\n\r\n    /**\r\n     * object is view-model for sign-in page\r\n     */\r\n    signInPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the sign-in page\r\n         */\r\n        formValidator: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // find all onsen-ui input targets and insert a special class to prevent materialize-css from updating the styles\r\n            $('ons-input input', $thisPage).addClass('utopiasoftware-no-style');\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.saveup.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $thisPage.get(0).onDeviceBackButton = function(){\r\n                    ons.notification.confirm('Do you want to close the app?') // Ask for confirmation\r\n                        .then(function(index) {\r\n                            if (index === 1) { // OK button\r\n                                navigator.app.exitApp(); // Close the app\r\n                            }\r\n                        });\r\n                };\r\n\r\n                // initialise the sign-in form validation\r\n                utopiasoftware.saveup.controller.signInPageViewModel.formValidator = $('#login-form').parsley();\r\n\r\n                // attach listener for the sign in button on the sign-in page\r\n                $('#login-signin').get(0).onclick = function(){\r\n                    // run the validation method for the sign-in form\r\n                    utopiasoftware.saveup.controller.signInPageViewModel.formValidator.whenValidate();\r\n                };\r\n\r\n                // listen for log in form field validation failure event\r\n                utopiasoftware.saveup.controller.signInPageViewModel.formValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    $(fieldInstance.$element).addClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).attr(\"data-hint\", fieldInstance.getErrorsMessages()[0]);\r\n                });\r\n\r\n                // listen for log in form field validation success event\r\n                utopiasoftware.saveup.controller.signInPageViewModel.formValidator.on('field:success', function(fieldInstance) {\r\n                    // remove tooltip from element\r\n                    $(fieldInstance.$element).removeClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).removeAttr(\"data-hint\");\r\n                });\r\n\r\n                // listen for log in form validation success\r\n                utopiasoftware.saveup.controller.signInPageViewModel.formValidator.on('form:success',\r\n                    utopiasoftware.saveup.controller.signInPageViewModel.signinFormValidated);\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n                // now that the page is being shown without the loader, start the animation of the icons\r\n                $('ons-icon.first,ons-icon.second', $thisPage).addClass('animated swing');\r\n                // wait for 4 seconds, then stop the pulse animation of the Create Account button\r\n                setTimeout(function(){$('#login-create-account', $thisPage).removeClass('pulse');}, 4000);\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the sign-in page is hidden\r\n         * @param event\r\n         */\r\n        pageHide: (event) => {\r\n            try {\r\n                // remove any tooltip being displayed on all forms in the login page\r\n                $('#sign-in-page [data-hint]').removeClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                $('#sign-in-page [data-hint]').removeAttr(\"data-hint\");\r\n                // reset the form validator object in the sign-in page\r\n                utopiasoftware.saveup.controller.signInPageViewModel.formValidator.reset();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the sign-in page is destroyed\r\n         * @param event\r\n         */\r\n        pageDestroy: (event) => {\r\n            try{\r\n                // remove any tooltip being displayed on all forms in the login page\r\n                $('#sign-in-page [data-hint]').removeClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                $('#sign-in-page [data-hint]').removeAttr(\"data-hint\");\r\n                // destroy the form validator objects in the login page\r\n                utopiasoftware.saveup.controller.signInPageViewModel.formValidator.destroy();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when sign-in form is successfully validated\r\n         */\r\n        signinFormValidated: function(){},\r\n\r\n        /**\r\n         * method is triggered when\r\n         */\r\n        createAccountButtonClicked: function(){\r\n            // move the tab view to the Sign Up tab\r\n            $('#login-tabbar').get(0).setActiveTab(1, {animation: \"slide\"});\r\n        },\r\n\r\n        forgotPinButtonClicked: function(){\r\n            // move the tab view to the Sign Up tab\r\n            $('#login-tabbar').get(0).setActiveTab(2, {animation: \"slide\"});\r\n        }\r\n\r\n    }\r\n};\r\n"]}