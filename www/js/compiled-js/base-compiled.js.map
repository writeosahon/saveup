{"version":3,"sources":["base.js"],"names":[],"mappings":"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","file":"base-compiled.js","sourcesContent":["/**\r\n * Created by UTOPIA SOFTWARE on 19/04/2017.\r\n */\r\n\r\n/**\r\n * file provides the \"base\" framework/utilities required to launch the app. E.g. file creates the base namespace which\r\n * the app is built on.\r\n *\r\n * The author uses the terms 'method' and function interchangeably; likewise the terms 'attribute' and 'property' are\r\n * also used interchangeably\r\n **/\r\n\r\nvar utopiasoftware = {\r\n    saveup : {\r\n\r\n        /**\r\n         * method is used to verify a user's phone number. it returns a Promise object. a resolved promise\r\n         * means the phone number was verified; a rejected promise means phone number verification failed.\r\n         *\r\n         * @param phoneNumber\r\n         * @returns {Promise}\r\n         */\r\n        validatePhoneNumber: function(phoneNumber){\r\n\r\n            phoneNumber = \"\" + phoneNumber; // ensure phone number is seen as a string\r\n\r\n            var smsWatcherTimer = null; // holds the timer used to stop the sms watcher\r\n\r\n            var rejectPromise = null;\r\n\r\n            if(phoneNumber.startsWith(\"0\")){ // the phone number starts with 0, replace it with international dialing code\r\n                phoneNumber = phoneNumber.replace(\"0\", \"+234\");\r\n            }\r\n            // show a loader message\r\n            $('#phone-verification-modal .modal-message').html(\"Verifying Phone Number...\");\r\n            $('#phone-verification-modal').get(0).show(); // show loader\r\n\r\n            // create the Promise object which will indicate if a phone was verified or not\r\n            var phoneNumberVerifiedPromise = new Promise(function(resolve, reject){\r\n                rejectPromise = reject;\r\n                var randomNumber = \"\"; //holds the random number to be sent in the sms\r\n\r\n                // start listening to the user's sms inbox\r\n                new Promise(function(resolve2, reject2){\r\n                    SMS.startWatch(resolve2, reject2);\r\n                }).\r\n                then(function(){ // sms watch of the user's inbox has been started\r\n                    // add listener for new arriving sms\r\n                    document.addEventListener('onSMSArrive', function(smsEvent){\r\n                        console.log(\"GOT SMS\");\r\n                        var sms = smsEvent.data;\r\n                        console.log(\"DATA\", sms);\r\n                        if(sms.address == phoneNumber && sms.body == \"SaveUp \" + randomNumber){\r\n                            console.log(\"SMS VERIFIED\");\r\n                            clearTimeout(smsWatcherTimer); // stop the set timer\r\n                            SMS.stopWatch(function(){}, function(){}); // stop sms watch\r\n                            document.removeEventListener('onSMSArrive'); // remove sms arrival listener\r\n                            $('#phone-verification-modal').get(0).hide(); // hide loader\r\n                            resolve(); // resolve promise\r\n                        }\r\n                    });\r\n                    // return a Promise object whaich sends sms to the phoneNumber parameter\r\n                    return new Promise(function(resolve3, reject3){\r\n\r\n                        var randomGen = new Random(Random.engines.nativeMath); // random number generator\r\n\r\n                        for(var i = 0; i < 6; i++){\r\n                            randomNumber += \"\" + randomGen.integer(0, 9);\r\n                        }\r\n                        SMS.sendSMS(phoneNumber, \"SaveUp \" + randomNumber, resolve3, reject3);\r\n                    });\r\n                }).\r\n                then(function(){\r\n                    smsWatcherTimer = setTimeout(function(){\r\n                        SMS.stopWatch(function(){}, function(){});\r\n                        document.removeEventListener('onSMSArrive');\r\n                        $('#phone-verification-modal').get(0).hide(); // hide loader\r\n                        rejectPromise(\"phone number verification failed\"); // reject the promise i.e. verification failed\r\n                    }, 31000);\r\n                }).\r\n                catch(function(){\r\n                    try{\r\n                        clearTimeout(smsWatcherTimer);\r\n                    }\r\n                    catch(err){}\r\n                    SMS.stopWatch(function(){}, function(){});\r\n                    document.removeEventListener('onSMSArrive');\r\n                    $('#phone-verification-modal').get(0).hide(); // hide loader\r\n                    reject(\"phone number verification failed\");\r\n                });\r\n            });\r\n\r\n            return phoneNumberVerifiedPromise;\r\n        }\r\n    }\r\n};\r\n"]}